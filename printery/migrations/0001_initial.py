# Generated by Django 3.2.6 on 2022-01-21 18:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.IntegerField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('address', models.CharField(max_length=64)),
                ('city', models.CharField(max_length=25)),
                ('postal_code', models.IntegerField()),
                ('country', models.CharField(max_length=56)),
                ('email', models.CharField(max_length=64)),
                ('is_manufacturer', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('middle_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('position', models.CharField(max_length=64)),
                ('phone_number', models.IntegerField()),
                ('email', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.CharField(choices=[('GL', 'Glossy'), ('MAT', 'Matte'), ('OFF', 'Offset')], max_length=3)),
                ('density', models.IntegerField()),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('manufacturer', models.ManyToManyField(blank=True, related_name='made_by', to='printery.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('type', models.CharField(choices=[('BK', 'Book'), ('CL', 'Calendar'), ('MZ', 'Magazine')], max_length=2)),
                ('title', models.CharField(max_length=16)),
                ('amount', models.IntegerField()),
                ('binding_style', models.CharField(blank=True, choices=[('GLU', 'Glue'), ('STA', 'Staple'), ('HAR', 'Hardcover'), ('FOL', 'Folding')], max_length=3)),
                ('final_width', models.IntegerField()),
                ('final_height', models.IntegerField(blank=True)),
                ('num_pages_in_block', models.IntegerField()),
                ('num_pages_in_cover', models.IntegerField()),
                ('num_pages_in_insert', models.IntegerField()),
                ('laminat', models.CharField(blank=True, choices=[('MAT', 'Matte'), ('GL', 'Glossy')], max_length=3)),
                ('owner', models.ManyToManyField(blank=True, related_name='order_owners', to=settings.AUTH_USER_MODEL)),
                ('paper_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block_paper', to='printery.paper')),
                ('paper_cover', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cover_paper', to='printery.paper')),
                ('paper_insert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insert_paper', to='printery.paper')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='printery.company'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
